local function CreateTest(directory)
	local f = io.popen(string.format("dir %s\\Sources", directory));
	for name in f:lines() do
		local s = (name:gmatch("(%w+%.lua)"))();
		if type(s) == "string" and #s ~= 0 and s:find("lua") then
			local f0 = io.open(string.format("%s\\Sources\\%s", directory, s), "r");
			local source = f0:read("*all");
			f0:close();
			os.execute(string.format("luau --compile=binary %s\\Sources\\%s > bytecode.luac", directory, s));
			os.execute(string.format("luau --compile %s\\Sources\\%s > listing.luac", directory, s));
			local f1 = io.open("bytecode.luac", "rb");
			local bytecode = f1:read("*all");
			f1:close();
			local f5 = io.open("listing.luac", "r");
			local listing = f5:read("*all");
			f5:close();
			local f2 = io.open(string.format("%s\\Tests\\%s", directory, s), "w+");
			f2:write(string.format("--[====[Generated by CreateTests.lua]====]\nreturn function()\n\treturn '%s'\nend", bytecode:gsub(".", function(b)
				return "\\" .. b:byte();
			end)));
			f2:close();
			local f3 = io.open(string.format("%s\\SourceTests\\%s", directory, s), "w+");
			f3:write(string.format("--[====[Generated by CreateTests.lua]====]\nreturn function()\n\t%s\nend", source));
			f3:close();
			local f4 = io.open(string.format("%s\\Listings\\%s", directory, s), "w+");
			f4:write(string.format("--[====[Generated by CreateTests.lua]====]\nreturn function()\n\treturn [[%s]]\nend", listing));
			f4:close();
		end;
	end;
end;

CreateTest("StagingTests")
CreateTest("ConformanceTests")
